// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	v1 "auth-service/internal/gen/auth/v1"

	mock "github.com/stretchr/testify/mock"
)

// IRequestValidator is an autogenerated mock type for the IRequestValidator type
type IRequestValidator struct {
	mock.Mock
}

// ValidateGetProfileByMobileNumberRequest provides a mock function with given fields: request
func (_m *IRequestValidator) ValidateGetProfileByMobileNumberRequest(request *v1.GetProfileByPhoneNumberRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1.GetProfileByPhoneNumberRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateLoginWithPhoneNumberRequest provides a mock function with given fields: request
func (_m *IRequestValidator) ValidateLoginWithPhoneNumberRequest(request *v1.LoginWithPhoneNumberRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1.LoginWithPhoneNumberRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidatePhoneNumberLogin provides a mock function with given fields: request
func (_m *IRequestValidator) ValidatePhoneNumberLogin(request *v1.ValidatePhoneNumberLoginRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1.ValidatePhoneNumberLoginRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateSignupWithPhoneNumberRequest provides a mock function with given fields: request
func (_m *IRequestValidator) ValidateSignupWithPhoneNumberRequest(request *v1.SignupWithPhoneNumberRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1.SignupWithPhoneNumberRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateVerifyPhoneNumberRequest provides a mock function with given fields: request
func (_m *IRequestValidator) ValidateVerifyPhoneNumberRequest(request *v1.VerifyPhoneNumberRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1.VerifyPhoneNumberRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIRequestValidator creates a new instance of IRequestValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIRequestValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *IRequestValidator {
	mock := &IRequestValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
